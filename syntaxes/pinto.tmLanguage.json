{
    "scopeName": "source.pinto",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#literals"
        }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.pinto",
                    "begin": "//",
                    "end": "\\n"
                },
                {
                    "name": "comment.block.pinto",
                    "begin": "/\\*",
                    "end": "\\*/"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "match": "(import)\\s+(@?[A-Za-z_$][A-Za-z0-9_$/]*)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.import.pinto"
                        },
                        "2": {
                            "name": "entity.name.section.pinto"
                        }
                    }
                },
                {
                    "match": "let",
                    "name": "storage.type.pinto"
                },
                {
                    "match": "type",
                    "name": "storage.type.pinto"
                }
            ]
        },
        "literals": {
            "patterns": [
                {
                    "include": "#boolean-literal"
                },
                {
                    "include": "#number-literal"
                },
                {
                    "include": "#string-literal"
                }
            ]
        },
        "identifier": {
            "match": "[A-Za-z$_][A-Za-z0-9$_]*",
            "name": "variable.pinto"
        },
        "boolean-literal": {
            "match": "(?:true|false)",
            "name": "constant.language.pinto"
        },
        "number-literal": {
            "patterns": [
                {
                    "match": "(?:[0-9]+(?:_*[0-9]+)*)+\\.(?:[0-9]+(?:_*[0-9]+)*)+",
                    "name": "constant.numeric.double.pinto"
                },
                {
                    "match": "(?:[0-9]+(?:_*[0-9]+)*)+",
                    "name": "constant.numeric.integer.pinto"
                }
            ]
        },
        "string-literal": {
            "patterns": [
                {
                    "match": "\"[^\\n]+\"",
                    "name": "string.quoted.pinto"
                }
            ]
        }
    }
}